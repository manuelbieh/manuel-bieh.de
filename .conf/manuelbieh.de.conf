# Redirect manuelbieh.de to www.manuelbieh.de
server {
    listen 80;
    listen [::]:80;
    server_name manuelbieh.de manuel-bieh.de www.manuel-bieh.de;
    return 301 https://www.manuelbieh.de$request_uri;
}

# Redirect https://www.manuel-bieh.de to https://www.manuelbieh.de
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    ssl_certificate /etc/letsencrypt/live/www.manuel-bieh.de/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/www.manuel-bieh.de/privkey.pem; # managed by Certbot

    server_name www.manuel-bieh.de;
    return 301 https://www.manuelbieh.de$request_uri;
}

# Redirect https://manuel-bieh.de to https://www.manuelbieh.de
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    ssl_certificate /etc/letsencrypt/live/manuel-bieh.de/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/manuel-bieh.de/privkey.pem; # managed by Certbot

    server_name manuel-bieh.de;
    return 301 https://www.manuelbieh.de$request_uri;
}

# Redirect https://manuelbieh.de to https://www.manuelbieh.de
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    ssl_certificate /etc/letsencrypt/live/manuelbieh.de/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/manuelbieh.de/privkey.pem; # managed by Certbot

    server_name manuelbieh.de;
    return 301 https://www.manuelbieh.de$request_uri;
}

# Redirect https://www.react-js.dev to https://www.manuelbieh.de
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    ssl_certificate /etc/letsencrypt/live/www.react-js.dev/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/www.react-js.dev/privkey.pem; # managed by Certbot

    server_name www.react-js.dev;
    return 301 https://www.manuelbieh.de$request_uri;
}

# Redirect https://react-js.dev to https://www.manuelbieh.de
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    ssl_certificate /etc/letsencrypt/live/react-js.dev/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/react-js.dev/privkey.pem; # managed by Certbot

    server_name react-js.dev;
    return 301 https://www.manuelbieh.de$request_uri;
}

# HTTP Config
server {
    if ($host = www.manuelbieh.de) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80 default_server;
    listen [::]:80 default_server;

    server_name www.manuelbieh.de;
    return 404; # managed by Certbot
}

# HTTPS Config
server {

    server_name www.manuelbieh.de;

    root /var/www/sites/manuelbieh.de/htdocs;

    # needed for letsencrypt
    location ~ /.well-known {
        allow all;
    }

    listen [::]:443 ssl http2 ipv6only=on default_server; # managed by Certbot
    listen 443 ssl http2 default_server; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/www.manuelbieh.de/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/www.manuelbieh.de/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    error_page 404 /404.html;

    location ~ ^/de {
        error_page 404 /de/404.html;
    }

    location ~ ^/en {
        error_page 404 /en/404.html;
    }

    location ~ ^/$ {
        # requires apt-get install nginx-extras
        rewrite_by_lua '
            for lang in (ngx.var.http_accept_language .. ","):gmatch("([^,]*),") do
                if string.sub(lang, 0, 2) == "en" then
                    ngx.redirect("/en")
                end
                if string.sub(lang, 0, 2) == "de" then
                    ngx.redirect("/de")
                end
            end
            ngx.redirect("/en")
        ';
    }

    # redirects to legacy host
    location ~ /(blog|storage|typo3conf|typo3temp|fileadmin|publikationen/typografie) {
        resolver 8.8.8.8 8.8.8.4;
        proxy_pass http://2004.manuel-bieh.de;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-for $remote_addr;
        # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    }

    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|woff|ttf|eot|js|css)$ {
        expires max;
        access_log off;
        add_header Cache-Control "public";
    }

    location /portfolio {
        autoindex on;
        root /var/www/sites;
    }

    # config taken from h5bp server
    server_tokens       off;
    sendfile            on;

    # Enable gzip compression.
    gzip on;

    # Compression level (1-9).
    # 5 is a perfect compromise between size and CPU usage, offering about
    # 75% reduction for most ASCII files (almost identical to level 9).
    gzip_comp_level     5;

    # Don't compress anything that's already small and unlikely to shrink much
    # if at all (the default is 20 bytes, which is bad as that usually leads to
    # larger files after gzipping).
    gzip_min_length     256;


    # Compress data even for clients that are connecting to us via proxies,
     # identified by the "Via" header (required for CloudFront).
     gzip_proxied        any;
 
     # Tell proxies to cache both the gzipped and regular version of a resource
     # whenever the client's Accept-Encoding capabilities header varies;
     # Avoids the issue where a non-gzip capable client (which is extremely rare
     # today) would display gibberish if their proxy gave them the gzipped version.
     gzip_vary           on;
 
     # Compress all output labeled with one of the following MIME-types.
     gzip_types
         application/atom+xml
         application/javascript
         application/json
         application/ld+json
         application/manifest+json
         application/rss+xml
         application/vnd.geo+json
         application/vnd.ms-fontobject
         application/x-font-ttf
         application/x-web-app-manifest+json
         application/xhtml+xml
         application/xml
         font/opentype
         image/bmp
         image/svg+xml
         image/x-icon
         text/cache-manifest
         text/css
         text/plain
         text/vcard
         text/vnd.rim.location.xloc
         text/vtt
         text/x-component
         text/x-cross-domain-policy;
 
     # This should be turned on if you are going to have pre-compressed copies (.gz) of
     # static files available. If not it should be left off as it will cause extra I/O
     # for the check. It is best if you enable this in a location{} block for
     # a specific directory, or on an individual server{} level.
     gzip_static         on;
 
     # rewrite ^/de/index.html$ /de/ permanent;
     # rewrite ^/en/index.html$ /en/ permanent;
 
     rewrite ^/ueber-mich/zur-person.html$ /de/profile/ permanent;
     rewrite ^/ueber-mich/lebenslauf.html$ /de/profile/ permanent;
     rewrite ^/leistungen.html$ /de/ permanent;
     rewrite ^/leistungen/buzzwords.html$ /de/technologies/ permanent;
     rewrite ^/leistungen/2d-barcode.html$ /de/ permanent;
     rewrite ^/referenzen.html$ /de/clients/ permanent;
     rewrite ^/referenzen/web.html$ /de/clients/ permanent;
     rewrite ^/referenzen/foto.html$ /de/clients/ permanent;
     rewrite ^/publikationen.html$ /de/publications/ permanent;
     rewrite ^/publikationen/web-entwicklung.html$ /de/publications/ permanent;
     rewrite ^/publikationen/typografie.html$ /de/publications/ permanent;
     rewrite ^/publikationen/beruf-karriere.html$ /de/publications/ permanent;
     rewrite ^/publikationen/script-snippets.html$ /de/publications/ permanent;
     rewrite ^/weblog.html$ /blog permanent;
     rewrite ^/footer/kontakt.html$ /de/contact/ permanent;
     rewrite ^/footer/impressum.html$ /de/legal/ permanent;
     rewrite ^/footer/kolophon.html$ /de/ permanent;
     rewrite ^/kontakt.html$ /de/contact/ permanent;
     rewrite ^/impressum.html$ /de/legal/ permanent;
     rewrite ^/kolophon.html$ /de/ permanent;

     rewrite ^/en.html$ /en/ permanent;
     rewrite ^/en/about-me/professional.html$ /en/profile/ permanent;
     rewrite ^/en/about-me/curriculum-vitae.html$ /en/profile/ permanent;
     rewrite ^/en/services.html$ /en/ permanent;
     rewrite ^/en/services/buzzwords.html$ /en/technologies/ permanent;
     rewrite ^/en/services/2d-barcode.html$ /en/ permanent;
     rewrite ^/en/work.html$ /en/clients/ permanent;
     rewrite ^/en/work/web.html$ /en/clients/ permanent;
     rewrite ^/en/work/foto.html$ /en/clients/ permanent;
     rewrite ^/en/weblog.html$ /blog?L=1 permanent;
     rewrite ^/en/legal-information.html$ /en/legal/ permanent;
     rewrite ^/en/colophon.html$ /en/ permanent;
 }
